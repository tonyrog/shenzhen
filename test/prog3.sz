# meta program

# max(A B) -> acc
macro max(A B) {
      tcp A B
      +mov A acc
      -mov B acc
}

# min(A B) -> acc
macro min(A B) {
      tcp A B
      -mov A acc	
      +mov B acc
}

# A <= B  -> cond
macro tlte(A B) {
      tlt A B
      -teq A B
}

# abs(acc) -> acc
macro abs(A) {
       tlt A 0   # A < 0
       +mov A acc # fixme: macro check if A == acc already
       +mul -1
}

# neg(acc) -> acc
macro neg(A) {
       +mov A acc # fixme: macro check if A == acc already
	mul -1
}
